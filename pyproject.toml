[tool.poetry]
description = "This project aims to provide a wrapper for the Teleflow API."
keywords = ["teleflow", "python", "sdk", "api", "wrapper"]
name = "teleflow"
version = "1.14.0"

documentation = "https://teleflow-python.readthedocs.io/en/latest"
homepage = "https://teleflow-python.readthedocs.io/en/latest"
repository = "https://github.com/khulnasoft/teleflow-python"

authors = ["oscar.marie-taillefer <oscar.marie-taillefer@spikeelabs.fr>"]
maintainers = ["oscar.marie-taillefer <oscar.marie-taillefer@spikeelabs.fr>"]

license = "MIT"
packages = [{include = "teleflow"}]
readme = "README.md"

classifiers = [
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Software Development",
  "Typing :: Typed",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS",
]

[tool.poetry.urls]
"Changelog" = "https://github.com/khulnasoft/teleflow-python/blob/main/CHANGELOG.md"
"Tracker" = "https://github.com/khulnasoft/teleflow-python/issues"

[tool.poetry.dependencies]
python = "^3.8"

requests = "^2.28.2"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.4"
black = "^24.0.0"
coverage = "^7.0.4"
mypy = "^1.1"
pre-commit = "^3.0.0"
pylama = "^8.4.1"
pylint = "^3.0.0"
pytest = "^8.0.0"
sentry-sdk = "^1.14.0"
toml = "^0.10.2"
types-requests = "^2.28.11.12"
types-setuptools = "^69.0.0.0"

[tool.poetry.group.docs.dependencies]
Sphinx = "^7.0.0"
m2r2 = "^0.3"
sphinx-rtd-theme = "^2.0.0"
sphinxcontrib-httpdomain = "^1.8"
sphinxcontrib-mermaid = "^0.9.0"

[tool.bandit]
targets = ["teleflow"]

[tool.black]
exclude = '''
(
    /(
        \.git
        |\.tox
        |migrations
    )/
)
'''
include = '\.pyi?$'
line-length = 120

[tool.mypy]
modules = "teleflow"
python_version = "3.8"

[tool.pylama]
format = "pycodestyle"
linters = "pycodestyle,pyflakes,pylint"
max_line_length = 120
skip = ".pytest_cache,.venv/*,tests/*,*/tests/*,docs/*"

[tool.pylama.linter.pycodestyle]
max_line_length = 120

[tool.pylama.linter.pylint]
disable = "W0212,W0511,R0913"
# Ignored rules:
#   - W0212: access-protected-member
#   - W0511: fixme, todo
#   - R0913: too-many-arguments

[tool.coverage.run]
branch = true
command_line = "-m pytest"
omit = ["tests/*", "teleflow/enums/polyfill.py"]
relative_files = true
source = ["teleflow"]

[tool.coverage.report]
fail_under = 100

[tool.pytest.ini_options]
testpaths = "tests/"
# addopts = "--doctest-modules -ra -l --tb=short --show-capture=all --color=yes"

[tool.codespell]
skip = 'poetry.lock,CHANGELOG.md'
